{"name":"The UML DSL","tagline":"A Ruby DSL for generating UML built on yuml.me","body":"# The UML DSL\r\n\r\nA Ruby DSL for generating UML built on yuml.me, visit the [homepage](http://derekstride.io/yuml/) to learn more.\r\n\r\n## Getting Started\r\n\r\nTo build a UML document start with this block of code. Everything inside the block will be used to describe the uml document you want to create.\r\n\r\n```ruby\r\nYUML.generate(file: 'tmp.pdf') do |uml|\r\n  ...\r\nend\r\n```\r\n\r\n### Generating a Class\r\n\r\nTo generate a class for the document use `uml.class` and pass a code block in to configure it. It accepts the following methods for configuration.\r\n\r\n* `name(name = nil, prototype = nil)` (required)\r\n* `variables(*args)`\r\n* `methods(*args)`\r\n\r\n#### Example\r\n\r\n```ruby\r\ndocument = uml.class do\r\n  name 'Document'\r\n  variables '-title: String', '-body: String'\r\n  methods(\r\n    '+add_section(id: int, content: String, style: Symbol)',\r\n    '+remove_section(id: int)',\r\n    '+edit_section(id: int, content: String, style: Symbol)'\r\n  )\r\nend\r\n```\r\n\r\n```ruby\r\nshape = uml.class do\r\n  name 'Shape', 'module'\r\n  methods '+draw(id: int, content: String, style: Symbol)'\r\nend\r\n```\r\n\r\n### Adding Relationships\r\n\r\nAfter generating some classes to add relationships to them use the following `YUML::Class` methods.\r\n\r\n* `has_a(node, options = {})`\r\n* `is_a(node, options = {})`\r\n* `associated_with(node, options = {})`\r\n* `attach_note(content, options = {})` *options include color!\r\n\r\n`has_a` can be **composition** or **aggregation** but defaults to aggregation.\r\n\r\n`is_a` can be **inheritance** or **interface** but defaults to inheritance.\r\n\r\n`associated_with` can be **association**, **directed_association**, **two_way_association**, or **dependancy** but defaults to directed_association.\r\n\r\n#### Example\r\n\r\n```ruby\r\ndocument.has_a(picture, cardinality: '0..*')\r\ndocument.is_a(content)\r\n\r\npicture.is_a(content, type: :interface)\r\ncontent.associated_with(content, type: :association, cardinality: %w(uses used))\r\ndocument.attach_note('This is a document', 'green')\r\n```\r\n\r\n### Adding notes\r\n\r\nYou can add notes to the document itself as well as attached to a class\r\n\r\n```ruby\r\nYUML.generate(file: 'tmp.pd') do |uml|\r\n  uml.attach_note('Cool UML Tool?')\r\nend\r\n```\r\n\r\n\r\n### Test it Out\r\n\r\n```ruby\r\nrequire 'yuml'\r\n\r\nYUML.generate(file: 'example.pdf') do |uml|\r\n  document = uml.class do\r\n    name 'Document'\r\n    variables '-title: String', '-body: String'\r\n    methods(\r\n      '+add_section(id: int, content: String, style: Symbol)',\r\n      '+remove_section(id: int)',\r\n      '+edit_section(id: int, content: String, style: Symbol)'\r\n    )\r\n  end\r\n\r\n  picture = uml.class do\r\n    name 'Picture'\r\n  end\r\n\r\n  content = uml.class do\r\n    name 'Content'\r\n  end\r\n\r\n  document.has_a(picture, cardinality: '0..*')\r\n  document.is_a(content)\r\n\r\n  picture.is_a(content)\r\nend\r\n```\r\n\r\n![output](https://cloud.githubusercontent.com/assets/6456191/13322710/bc91e81c-dba3-11e5-88d3-16e1980f7cb4.png)\r\n","google":"UA-58890104-4","note":"Don't delete this file! It's used internally to help with page regeneration."}